{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Data science project template","text":"<p>Template for a data science projects with software development tools</p> <p>Table of Contents</p> <ul> <li>Data science project template</li> <li> Creating a New Project<ul> <li>Recommendations</li> </ul> </li> <li> Linking an Existing Project</li> <li>:card_file_box: Project structure</li> <li> Features and Tools<ul> <li> Project Standardization and Automation</li> <li> Developer Workflow Automation</li> <li> Conditionally Rendered Python Package or Project Boilerplate</li> <li> Maintainability</li> <li> Type Checking and Data Validation</li> <li>:white_check_mark: Testing/Coverage</li> <li>:rotating_light: Linting</li> <li>:construction_worker: CI/CD</li> </ul> </li> <li> Security<ul> <li>:lock_with_ink_pen: Static Application Security Testing (SAST)</li> </ul> </li> <li> Accessibility<ul> <li> Project Documentation</li> <li>:card_file_box: Templates</li> </ul> </li> <li>References</li> </ul>"},{"location":"#creating-a-new-project","title":"Creating a New Project","text":""},{"location":"#recommendations","title":"Recommendations","text":"<p>It is highly recommended to use a python version manager like Pyenv and this project is set to use Poetry to manage the dependencies and the environment.</p> <ol> <li>Install Pyenv</li> <li>Install Poetry</li> </ol> <p>Via Cruft - recommended:</p> install cruft<pre><code>pip install --user cruft # Install `cruft` on your path for easy access\n</code></pre> create project<pre><code>cruft create https://github.com/JoseRZapata/data-science-project-template\n</code></pre> <p>Via Cookiecutter:</p> install cookiecutter<pre><code>pip install --user cookiecutter # Install `cookiecutter` on your path for easy access\n</code></pre> create project<pre><code>cookiecutter gh:JoseRZapata/data-science-project-template\n</code></pre> <p>Note: Cookiecutter uses <code>gh:</code> as short-hand for <code>https://github.com/</code></p>"},{"location":"#linking-an-existing-project","title":"Linking an Existing Project","text":"<p>If the project was originally installed via Cookiecutter, you must first use Cruft to link the project with the original template:</p> <pre><code>cruft link https://github.com/JoseRZapata/data-science-project-template\n</code></pre> <p>Then/else:</p> <pre><code>cruft update\n</code></pre>"},{"location":"#project-structure","title":"Project structure","text":"<p>Folder structure for data science projects  why?</p> <pre><code>.\n\u251c\u2500\u2500 codecov.yml                         # configuration for codecov\n\u251c\u2500\u2500 .code_quality\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bandit.yaml                     # bandit configuration\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mypy.ini                        # mypy configuration\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ruff.toml                       # ruff configuration\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 01_raw                          # raw immutable data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 02_intermediate                 # typed data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 03_primary                      # domain model data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 04_feature                      # model features\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 05_model_input                  # often called 'master tables'\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 06_models                       # serialized models\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 07_model_output                 # data generated by model runs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 08_reporting                    # reports, results, etc\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md                       # description of the data structure\n\u251c\u2500\u2500 docs                                # documentation for your project\n\u251c\u2500\u2500 .editorconfig                       # editor configuration\n\u251c\u2500\u2500 .github                             # github configuration\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 actions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 python-poetry-env\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 action.yml              # github action to setup python environment\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pull_request_template.md        # template for pull requests\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 workflows\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 dependencies.yml            # github action to update dependencies\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 pre-commit_autoupdate.yml   # github action update pre-commit hooks\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 test.yml\n\u251c\u2500\u2500 .gitignore                          # files to ignore in git\n\u251c\u2500\u2500 Makefile                            # useful commands to setup environment,\n\u251c\u2500\u2500 models                              # store final models\n\u251c\u2500\u2500 notebooks\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1-data                          # notebooks for data extraction and cleaning\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2-exploration                   # notebooks for data exploration\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 3-analysis                      # notebooks for data analysis\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 4-feat_eng                      # notebooks for feature engineering\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 5-models                        # notebooks for model training\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 6-evaluation                    # notebooks for model evaluation\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7-deploy                        # notebooks for model deployment\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 notebook_template.ipynb         # template for notebooks\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md                       # information about the notebooks\n\u251c\u2500\u2500 .pre-commit-config.yaml             # configuration for pre-commit hooks\n\u251c\u2500\u2500 pyproject.toml                      # dependencies for poetry\n\u251c\u2500\u2500 README.md                           # description of your project\n\u251c\u2500\u2500 src                                 # source code for use in this project\n\u251c\u2500\u2500 tests                               # test code for your project\n\u2514\u2500\u2500 .vscode                             # vscode configuration\n    \u251c\u2500\u2500 extensions.json                 # list of recommended extensions\n    \u2514\u2500\u2500 settings.json                   # vscode settings\n</code></pre>"},{"location":"#features-and-tools","title":"Features and Tools","text":""},{"location":"#project-standardization-and-automation","title":"Project Standardization and Automation","text":""},{"location":"#developer-workflow-automation","title":"Developer Workflow Automation","text":"<ul> <li>Python packaging, dependency management and environment management   with Poetry - <code>why?</code></li> <li>Project workflow orchestration   with Make as an interface shim</li> <li>Self-documenting Makefile; just type       <code>make</code> on the command line to display auto-generated documentation on available       targets:</li> <li>Automated Cookiecutter template synchronization with Cruft - <code>why?</code></li> <li>Code quality tooling automation and management with pre-commit</li> <li>Continuous integration and deployment with GitHub Actions</li> <li>Project configuration files  with Hydra - <code>why?</code></li> </ul>"},{"location":"#conditionally-rendered-python-package-or-project-boilerplate","title":"Conditionally Rendered Python Package or Project Boilerplate","text":"<ul> <li>Optional: Jupyter support</li> </ul>"},{"location":"#maintainability","title":"Maintainability","text":""},{"location":"#type-checking-and-data-validation","title":"Type Checking and Data Validation","text":"<ul> <li>Static type-checking with Mypy</li> </ul>"},{"location":"#testingcoverage","title":"Testing/Coverage","text":"<ul> <li>Testing   with Pytest</li> <li>Doctests   with xdoctest</li> <li>Code coverage   with Coverage.py</li> <li>Coverage reporting   with Codecov</li> </ul>"},{"location":"#linting","title":"Linting","text":"<ul> <li>Code quality:</li> <li>Ruff<ul> <li>A blazing-fast (10x-100x faster) replacement for     ~~Pylint~~, ~~Flake8~~ (including major plugins) and more linters under a single, common interface</li> </ul> </li> <li>ShellCheck</li> <li>Code formatting:</li> <li> <p>Ruff</p> <ul> <li>A blazing-fast (10x-100x faster) replacement for     ~~Black~~, ~~isort~~, ~~pyupgrade~~ and more formaters under a single, common interface</li> </ul> </li> <li> <p>General file formatting:</p> </li> <li><code>end-of-file-fixer</code></li> <li><code>pretty-format-json</code></li> <li>(trim) <code>trailing-whitespace</code></li> <li><code>check-yaml</code></li> <li>Unsanitary commits:</li> <li>Secrets     with <code>detect-secrets</code></li> <li>Large files     with <code>check-added-large-files</code></li> <li>Invalid Python files     with <code>check-ast</code></li> </ul>"},{"location":"#cicd","title":"CI/CD","text":"<ul> <li>Dependency updates   with Dependabot</li> <li>Automated Dependabot PR merging     with the Dependabot Auto Merge GitHub Action</li> </ul>"},{"location":"#security","title":"Security","text":""},{"location":"#static-application-security-testing-sast","title":"Static Application Security Testing (SAST)","text":"<ul> <li>Code vulnerabilities   with Bandit</li> </ul>"},{"location":"#accessibility","title":"Accessibility","text":""},{"location":"#project-documentation","title":"Project Documentation","text":"<ul> <li>Documentation building   with MkDocs - Tutorial</li> <li>Powered by mkdocs-material</li> <li>Rich automatic documentation from type annotations and docstrings (NumPy, Google, etc.)     with mkdocstrings</li> </ul>"},{"location":"#templates","title":"Templates","text":"<ul> <li>Pull Request template</li> <li>Notebook template</li> </ul>"},{"location":"#references","title":"References","text":"<ul> <li>https://drivendata.github.io/cookiecutter-data-science/</li> <li>https://github.com/crmne/cookiecutter-modern-datascience</li> <li>https://github.com/khuyentran1401/data-science-template</li> <li>https://github.com/woltapp/wolt-python-package-cookiecutter</li> <li>https://khuyentran1401.github.io/reproducible-data-science/structure_project/introduction.html</li> <li>https://github.com/TeoZosa/cookiecutter-cruft-poetry-tox-pre-commit-ci-cd</li> <li>https://github.com/kedro-org/kedro-starters</li> </ul>"}]}